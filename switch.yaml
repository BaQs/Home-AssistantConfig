  - platform: rfxtrx
    automatic_add: True
    signal_repetitions: 5
    devices:
            "0B110000464D8E6909000090":
                    name: Prise Cave
  #         "0B1100002025EA1909010F90":
            "0B1100002025EA1909000090":
                    name: Prise Bambi
  #          0B11002F67134A5A03010F70
            "0B11002F67134A5A03010F70":
                    name: Radiateur Bibliothèque
            "0B11002F144637B903010F70":
                    name: Radiateur Cuisine
            "0B11002F6BD03FB803010F70":
                    name: Radiateur 1 Salon
            "0B11002F57651E4D03010F70":
                    name: Radiateur 2 Salon
  #         "0B110000445BBC9B09010F90"
            "0B110000445BBC9B09000090":
                    name: Prise Lampe Boule
            "0B1100000144449201040F60":
                    name: Sonnette
                    fire_event: true
##            automatically added :
#            "0B1100120144449201040F60":
#                   0x0b 0x11 0x00 0x2c 0x01 0x44 0x44 0x92 0x01 0x04 0x0f 0x60
#           : Recv: 0x0b 0x11 0x00 0x31 0x01 0x44 0x44 0x92 0x01 0x04 0x0f 0x60
#           : Recv: 0x0b 0x11 0x00 0x32 0x01 0x44 0x44 0x92 0x01 0x04 0x0f 0x60
#                    name: 'Sonnette 3'
#                    fire_event: true
##            automatically added in binary_sensor:
#            "0B1100070144449201040F60":
#                    name: 'Sonnette 4'
#                    fire_event: true
###            forged by myself
#            "0B1100000144449201040F60":
#                    name: 'Sonnette 5'
#                    fire_event: true
##
#
#  - platform: flux
#    lights:
#      - light.fibaro_system_fgd212_dimmer_2_level_4
#      - light.fibaro_system_fgd212_dimmer_2_level_7
#      - light.fibaro_system_fgd212_dimmer_2_level_5
#    name: Fluxer
#    start_time: '7:00'
#    stop_time: '23:00'
#    start_colortemp: 4000
#    sunset_colortemp: 3000
#    stop_colortemp: 1900
#    brightness: 200
#    disable_brightness_adjust: True
#    mode: xy
#    transition: 30
#    interval: 60
#
#    HANDLED BY THE DISPLAY CUSTOM COMPONENT
#
#  - platform: command_line
#    switches:
#      chuwi_screen:
#        command_on: !secret chuwi_screen_on
#        command_off: !secret chuwi_screen_off
#        command_state: !secret chuwi_screen_state
#        value_template: '{{ value == "on" }}'
#        friendly_name: Chuwi Screen
#  
#  - platform: command_line        
#    switches:
#      chuwi_tts:
#        command_on: !secret chuwi_tts 
#        friendly_name: Chuwi TTS
#
#    HANDLED BY THE DISPLAY CUSTOM COMPONENT

#  - platform: command_line
#    switches:
#      chuwi_screen:
#        command_on: !secret chuwi_screen_on


# Qubino thermostat, used as heater for generic thermostat
  - platform: template
    switches:
      qubino_bedroom_parents:
        value_template: "{{ is_state('input_select.qubino_bedroom_parents', 'Comfort') }}"
        turn_on:
          service: input_select.select_option
          data:
            entity_id: input_select.qubino_bedroom_parents
            option: 'Comfort'
        turn_off:
          service: input_select.select_option
          data:
            entity_id: input_select.qubino_bedroom_parents
            option: 'Stop'



# Qubino thermostat, used as heater for generic thermostat
  - platform: template
    switches:
      qubino_bedroom_baby:
        value_template: "{{ is_state('input_select.qubino_bedroom_baby', 'Comfort') }}"
        turn_on:
          service: input_select.select_option
          data:
            entity_id: input_select.qubino_bedroom_baby
            option: 'Comfort'
        turn_off:
          service: input_select.select_option
          data:
            entity_id: input_select.qubino_bedroom_baby
            option: 'Stop'


#
## Qubino thermostat, used as heater for generic thermostat
#  - platform: template
#    switches:
#      qubino_bedroom_baby:
#        value_template: "{{ is_state('light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level', 'on') }}"
#        turn_on:
#          service: light.turn_on
#          data:
#            entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
#        turn_off:
#          service: switch.turn_on
#          data:
#            entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level

  - platform: template
    switches:
      radiateur_1_salon_inverted:
        value_template: "{{ is_state('switch.radiateur_1_salon', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_1_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_1_salon
#       icon_template: "{% if is_state('switch.radiateur_1_salon', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"

  - platform: template
    switches:
      radiateur_2_salon_inverted:
        value_template: "{{ is_state('switch.radiateur_2_salon', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_2_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_2_salon
#       icon_template: "{% if is_state('switch.radiateur_2_salon', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"

  - platform: template
    switches:
      radiateur_cuisine_inverted:
        value_template: "{{ is_state('switch.radiateur_cuisine', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_cuisine
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_cuisine
#       icon_template: "{% if is_state('switch.radiateur_cuisine', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"
  - platform: template
    switches:
      radiateur_bibliotheque_inverted:
        value_template: "{{ is_state('switch.radiateur_bibliotheque', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_bibliotheque
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_bibliotheque
#       icon_template: "{% if is_state('switch.radiateur_bibliotheque', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"




  - platform: template
    switches:
      harmony_tv:
        friendly_name: Regarder la TV
        value_template: "{{ is_state_attr('remote.harmony_hub', 'current_activity', 'Regarder la TV') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'Regarder la TV'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'PowerOff'

  - platform: template
    switches:
      harmony_music:
        friendly_name: Écouter la musique
        value_template: "{{ is_state_attr('remote.harmony_hub', 'current_activity', 'Écouter la musique') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'Écouter la musique'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'PowerOff'


  - platform: template
    switches:
      harmony_ps4:
        friendly_name: PS4 
        value_template: "{{ is_state_attr('remote.harmony_hub', 'current_activity', 'PS4') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'PS4'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'PowerOff'

  - platform: template
    switches:
      harmony_netflix:
        friendly_name: Regarder Netflix
        value_template: "{{ is_state_attr('remote.harmony_hub', 'current_activity', 'Regarder Netflix') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'Regarder Netflix'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.harmony_hub
            activity: 'PowerOff'

