# # Automatic away mode when nobody is at home during the day,
# # and not on vacation
# - id: away_from_home_away_mode
#   alias: "Away: From Home"
#   initial_state: true
#   hide_entity: True
#   trigger:
#     - platform: state
#       entity_id: sensor.current_state
#       from: 'home'
#       to: 'away'
#       for:
#         minutes: 10
#   # Set away mode
#   action:
#     - service: notify.ios_ipierre
#       data:
#         message: Nobody is at home. Turning off lights, arming alarm, turning off TV, launching vacuum, switching on the cave pump & putting the thermostats in away mode.
#     # Turn off lights and hot water recirculation pump
#     - service: light.turn_off
#       data:
#         entity_id:
#           - group.all_lights
#     # Arm alarm (now handled via package alarm.yaml)
#     # Start the vacuum
#     - service: vacuum.start
#       entity_id: vacuum.xiaomi_vacuum_cleaner
#     # Turn off TV
#     - service: remote.turn_off
#       entity_id: remote.harmony_hub
#     # Turn ON Cave pump
#     - service: homeassistant.turn_on
#       entity_id: switch.prise_cave
#     # Thermostats in away mode (now handled by scheedy)
#     # - service: climate.set_away_mode
#     #   data:
#     #     entity_id: group.climate
#     #     away_mode: true
#     - service: switch.turn_off
#       entity_id: switch.fullykiosk_screen
  
# - alias: 'Notification: open door when leaving'
#   initial_state: true
#   hide_entity: True
#   trigger:
#     - platform: state
#       entity_id: sensor.current_state
#       from: 'home'
#       to: 'away'
#   condition: 
#     - condition: state
#       entity_id: group.perimeter_detectors
#       state: 'on'
#   action:
#     - service: notify.ios_ipierre
#       data_template:
#         message: >
#           "Une porte est restÃ©e ouverte:"
#           {%- for entity_id in states.group.perimeter_detectors.attributes.entity_id -%}
#           {% set parts = entity_id.split('.') -%}
#           {%- if states(entity_id) == 'on' %}
#           {%- if loop.first %} {% elif loop.last %} et la {% else %}, la {% endif -%}{{ states[parts[0]][parts[1]].name }}{% endif -%}
#           {%- endfor %}
 
