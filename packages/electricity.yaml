################################################
## Packages / Host / Electricity
################################################

homeassistant:
  customize:
    sensor.elecbill_today_so_far_ttc:
      icon: mdi:power-socket-eu
#    ################################################
#    ## Node Anchors
#    ################################################

#    package.node_anchors:
#      customize: &customize
#        package: 'updates'

#    ################################################
#    ## Binary Sensor
#    ################################################

#    binary_sensor.hass_update_available:
#      <<: *customize
#      friendly_name: 'Update Available Hass'
#      device_class: problem

#    ################################################
#    ## Sensor
#    ################################################

#    sensor.hass_installed_version:
#      <<: *customize
#      friendly_name: 'Hass.io Installed Version'
#      icon: mdi:check-decagram

################################################
## Sensor
################################################

sensor:
  # - platform: teleinfo
  #   name: "edf"
  #   device: "/dev/ttyUSB0"
  - platform: teleinfo
    name: "edf"
    device: "/dev/ttyUSB0"
  
  - platform: linky
    username: !secret linky_username
    password: !secret linky_password


  - platform: template
    sensors:
      teleinfo_hchc:
        value_template: '{{ states.sensor.edf.attributes["HCHC"] }}'
        unit_of_measurement: 'Wh'
        icon_template: mdi:flash
        entity_id: sensor.edf

  - platform: template
    sensors:
      teleinfo_hchp:
        value_template: '{{ states.sensor.edf.attributes["HCHP"] }}'
        unit_of_measurement: 'Wh'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_hhphc:
        value_template: '{{ states.sensor.edf.attributes["HHPHC"] }}'
        unit_of_measurement: ''
        icon_template: mdi:information-outline
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_iinst:
        value_template: '{{ states.sensor.edf.attributes["IINST"] }}'
        unit_of_measurement: 'A'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_imax:
        value_template: '{{ states.sensor.edf.attributes["IMAX"] }}'
        unit_of_measurement: 'A'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_papp:
        value_template: '{{ states.sensor.edf.attributes["PAPP"] }}'
        unit_of_measurement: 'vA'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_ptec:
        value_template: '{{ states.sensor.edf.attributes["PTEC"] }}'
        unit_of_measurement: ''
        icon_template: mdi:information-outline
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_isousc:
        value_template: '{{ states.sensor.edf.attributes["ISOUSC"] }}'
        unit_of_measurement: 'A'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
        elecbill_cta:
            value_template: '20.52'
            friendly_name: 'CTA (/an)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_options:
            value_template: '4.99'
            friendly_name: 'Options (/m.)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_subscription:
            value_template: '9.78'
            friendly_name: 'Subscription (/m.)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_cost_hp:
            value_template: '0.0895'
            friendly_name: 'HP Cost (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_cost_hc:
            value_template: '0.0632'
            friendly_name: 'HC Cost (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_cspe:
            value_template: '0.0225'
            friendly_name: 'Public Electricity Service Contribution (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_tcfe_municipal:
            value_template: '0.00638'
            friendly_name: 'Municipal Tax on final electricity consumption (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_tcfe_departmental:
            value_template: '0.00319'
            friendly_name: 'Departmental Tax on final electricity consumption (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_today_so_far_hc:
            friendly_name: 'Electricity HC cost (Today so far)'
            unit_of_measurement: '€'
            value_template: >
              {{   
              (
              (states.sensor.hc_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) 
              )|round(2)
              }}

            
            
  - platform: template
    sensors:
        elecbill_today_so_far_hp:
            friendly_name: 'Electricity HP cost (Today so far)'
            unit_of_measurement: '€'
            value_template: >
              {{   
              (
              (states.sensor.hp_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hp.state |float) 
              )|round(2)
              }}



  # number of hours since midnight
  # {{ ( (as_timestamp(now()) - as_timestamp(strptime(states("sensor.date"), "%Y-%m-%d")) )|float /60/60 )|round(2)}}
  #
  # Finally: not used
          
  # we transform W to kWh , bu multiplying the W by nb_hours and / 1000
  # nb_hour = 16 cause HP, 8 cause HC
  #
  - platform: template
    sensors:
        elecbill_today_so_far_hc_heating:
            friendly_name: 'Heating HC cost (Today so far)'
            unit_of_measurement: '€'
            value_template: >
              {{   
              (
              (states.sensor.hc_heating_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) 
              )|round(2)
              }}
  
  # we transform W to kWh , bu multiplying the W by nb_hours and / 1000
  # nb_hour = 16 cause HP, 8 cause HC
  - platform: template
    sensors:
        elecbill_today_so_far_hp_heating:
            friendly_name: 'Heating HP cost (Today so far)'
            unit_of_measurement: '€'
            value_template: >
              {{   
              (
              (states.sensor.hp_heating_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hp.state |float) 
              )|round(2)
              }}

  - platform: template
    sensors:
        elecbill_today_so_far_sub:
            friendly_name: 'Electricity Subscription cost (Today so far)'
            unit_of_measurement: '€'
            value_template: >
              {{   

              (

              (states.sensor.elecbill_subscription.state |float / 30) + 
              (states.sensor.elecbill_cta.state |float / 365)  

              + (states.sensor.elecbill_options.state |float /30)

              )|round(2)

              }}


  - platform: template
    sensors:
        elecbill_today_so_far_taxes:
            friendly_name: 'Electricity Taxes cost (Today so far)'
            unit_of_measurement: '€'
            value_template: >
              {{   

              (

              (
              (states.sensor.elecbill_subscription.state |float / 30) + 
              (states.sensor.elecbill_cta.state |float / 365)  
              ) * 0.055

              +

              (
              (states.sensor.hc_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_today_so_far.state |float /1000 ) *
              (states.sensor.elecbill_cost_hp.state|float)

              + (states.sensor.elecbill_options.state |float /30)

              ) * 0.20


              + 
              (
              ( 
              (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
              )
              +
              ( 
              (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
              )

              ) * 1.20

              )|round(2)

              }}

  
  - platform: template
    sensors:
        elecbill_today_so_far_ttc:
            friendly_name: 'Electricity TTC cost (Today so far)'
            unit_of_measurement: '€'
            value_template: >
              {{   

              (

              (
              (states.sensor.elecbill_subscription.state |float / 30) + 
              (states.sensor.elecbill_cta.state |float / 365)  
              ) * 1.055

              +

              (
              (states.sensor.hc_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_today_so_far.state |float /1000 ) *
              (states.sensor.elecbill_cost_hp.state|float)

              + (states.sensor.elecbill_options.state |float /30)

              + 
              ( 
              (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
              )
              +
              ( 
              (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
              )

              ) * 1.20

              )|round(2)

              }}
 
  - platform: template
    sensors:
        elecbill_today_ttc:
            value_template: >
              {{   

              (

              (
              (states.sensor.elecbill_subscription.state |float / 30) + 
              (states.sensor.elecbill_cta.state |float / 365)  
              ) * 1.055

              +

              (
              (states.sensor.hc_energy_consumed_last_day.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_last_day.state |float /1000 ) *
              (states.sensor.elecbill_cost_hp.state|float)

              + (states.sensor.elecbill_options.state |float /30)

              + 
              ( 
              (states.sensor.hc_energy_consumed_last_day.state|float/1000 + states.sensor.hp_energy_consumed_last_day.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
              )
              +
              ( 
              (states.sensor.hc_energy_consumed_last_day.state|float/1000 + states.sensor.hp_energy_consumed_last_day.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
              )

              ) * 1.20

              )|round(2)

              }}

            friendly_name: 'Energy cost today (TTC)'
            unit_of_measurement: '€'


  - platform: template
    sensors:
        elecbill_last_week_ttc:
            value_template: >
              {{   

              (

              (
              (states.sensor.elecbill_subscription.state |float / 7) + 
              (states.sensor.elecbill_cta.state |float / 52)  
              ) * 1.055

              +

              (
              (states.sensor.hc_energy_consumed_last_week.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_last_week.state |float /1000 ) *
              (states.sensor.elecbill_cost_hp.state|float)

              + (states.sensor.elecbill_options.state |float /7)

              + 
              ( 
              (states.sensor.hc_energy_consumed_last_week.state|float/1000 + states.sensor.hp_energy_consumed_last_week.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
              )
              +
              ( 
              (states.sensor.hc_energy_consumed_last_week.state|float/1000 + states.sensor.hp_energy_consumed_last_week.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
              )

              ) * 1.20

              )|round(2)

              }} 

            friendly_name: 'Energy cost last week (TTC)'
            unit_of_measurement: '€'



  - platform: template
    sensors:
        elecbill_last_month_ttc:
            value_template: >
              {{   
              (

              (
              (states.sensor.elecbill_subscription.state |float) + 
              (states.sensor.elecbill_cta.state |float / 12)  
              ) * 1.055

              +

              (
              (states.sensor.hc_energy_consumed_last_month.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_last_month.state |float /1000 ) *
              (states.sensor.elecbill_cost_hp.state|float)

              + (states.sensor.elecbill_options.state |float )

              + 
              ( 
              (states.sensor.hc_energy_consumed_last_month.state|float/1000 + states.sensor.hp_energy_consumed_last_month.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
              )
              +
              ( 
              (states.sensor.hc_energy_consumed_last_month.state|float/1000 + states.sensor.hp_energy_consumed_last_month.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
              )

              ) * 1.20

              )|round(2)

              }} 

            friendly_name: 'Energy cost last month (TTC)'
            unit_of_measurement: '€'






  - platform: influxdb
    host: !secret influx_host
    port: 8086
    # max_retries: 10


    queries:
#
#      - name: HC Energy Consumed (last hour)
#        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1h'
#        measurement: '"Wh"'
#        group_function: spread
#        value_template: '{{ value | round(2) }}'
#        unit_of_measurement: Wh
#
#      - name: HP Energy Consumed (last hour)
#        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1h'
#        measurement: '"Wh"'
#        group_function: spread
#        value_template: '{{ value | round(2) }}'
#        unit_of_measurement: Wh
#
      - name: HC Energy Consumed (today so far)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d") }}'' TZ(''Europe/Paris'')  '
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (today so far)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d") }}''  TZ(''Europe/Paris'') '
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh


        # number of seconds since midnight
        # {{ ( (as_timestamp(now()) - as_timestamp(strptime(states("sensor.date"), "%Y-%m-%d")) )|float /60/60 )|round(2)}}
        
      - name: HC Heating Consumed (today so far)
        where: '"entity_id" = ''owl_180_energy_usage'' AND "Total usage" > 0 AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d ") }} 00:00:00''  AND time < ''{{ strptime(states("sensor.date"), "%Y-%m-%d ") }} 08:00:00'' TZ(''Europe/Paris'') '
        measurement: '"W"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh
        field:  '"Total usage"'

        # NB/ the space after %d is important! otherwise it generates automatically 00:00:00

      - name: HP Heating Consumed (today so far)
        where: '"entity_id" = ''owl_180_energy_usage'' AND "Total usage" > 0 AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d ") }} 08:00:00''  TZ(''Europe/Paris'') '
        measurement: '"W"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh
        field:  '"Total usage"'


      - name: HC Energy Consumed (last day)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1d'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (last day)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1d'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HC Energy Consumed (last week)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1w'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (last week)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1w'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HC Energy Consumed (last month)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1m'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (last month)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1m'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: Spread Teleinfo PAPP
        where: '"entity_id" = ''teleinfo_papp'' AND time >= now() - 180s TZ(''Europe/Paris'') '
        group_function: spread
        measurement: '"vA"'
        unit_of_measurement: vA
      # value_template: '{{ value | round(2) }}'


      - name: Derivative Teleinfo PAPP
        where: '"entity_id" = ''teleinfo_papp'' AND time >= now() - 120s TZ(''Europe/Paris'') '
        group_function: derivative
        field:  '"value",2m'
        measurement: '"vA"'
        unit_of_measurement: vA
      # value_template: '{{ value | round(2) }}'
 

################################################
## Binary Sensor
################################################

binary_sensor:

# group:
  # host_updates:
  #   name: 'Updates'
  #   entities:
  #     - updater.updater
  #     - sensor.hass_installed_version

################################################
## Automation
################################################

automation:
  - id: electricity_failure_notification
    alias: 'Electricity: Failure notification'
    trigger:
    - entity_id: sensor.ups_status
      platform: state
      from: 'ONLINE'
  # condition:
    action:
    - service: notify.telegram
      data:
        title: Electricité
        message: |
          Coupure électrique! APC en statut <b>{{states.sensor.ups_status.state}}</b>. Il reste {{  states.sensor.ups_time_left.state }}min. de batterie
 
  
  
  - id: electricity_bill_daily
    alias: 'Electricity: Daily Bill'
    trigger:
      platform: time
      # When 'at' is used, you cannot also match on hour, minute, seconds.
      # Military time format.
      at: '08:00:00'
  # condition:
    action:
    - service: notify.telegram
      data:
        title: Electricité
        message: |
          Hier, l'électricité a coûté <b> {{ states.sensor.elecbill_today_ttc.state |float | round(2) }}</b>€
  
  - id: electricity_bill_weekly
    alias: 'Electricity: Weekly Bill'
    trigger:
      platform: time
      # When 'at' is used, you cannot also match on hour, minute, seconds.
      # Military time format.
      at: '08:00:00'
    condition:
      - condition: time
        weekday:
          - mon
    action:
    - service: notify.telegram
      data:
        title: Electricité
        message: |
          Cette semaine, l'électricité a coûté <b> {{ states.sensor.elecbill_last_week_ttc.state |float | round(2) }}</b>€
  
  - id: electricity_bill_monthly
    alias: 'Electricity: Weekly Bill'
    trigger:
    - platform: template
      value_template: '{{ now().strftime("%d") == "01" }}'
    action:
    - service: notify.telegram
      data:
        title: Electricité
        message: |
          Ce mois-ci, l'électricité a coûté <b> {{ states.sensor.elecbill_last_month_ttc.state |float | round(2) }}</b>€
  
  
  
  
  
  - id: electricity_monthly_report
    alias: 'Electricity: Monthly Report'
    trigger:
    - platform: template
      value_template: '{{ now().strftime("%d") == "01" }}'
  # condition:
    action:
    - service: notify.telegram
      data:
        title: Electricité
        message: |
          Il est temps de déclarer la conso !
          HP: {{ '<b>{0}{1}{2}{3}{4}</b>.{5}{6}{7}'.format(*states.sensor.teleinfo_hchp.state) }}kWh
          HC: {{ '<b>{0}{1}{2}{3}{4}</b>.{5}{6}{7}'.format(*states.sensor.teleinfo_hchc.state) }}kWh
          https://clients.direct-energie.com/ma-conso/faire-mon-e-releve/
  #       HP: {{ states.sensor.teleinfo_hchp.state  }}
  #       HC: {{ states.sensor.teleinfo_hchc.state  }} 
  #     message: Test
  #  - service: tts.google_say
  #    data:
  #      entity_id: media_player.google_home__salon
  #      message: "La place de parking vient de se libérer"
  
  
  
  
  
  ################################################
  ## Store meter readings at midnight so that power consumption per day can be caculated
  ################################################
  - id: electricity_store_meter_readings_at_midnight
    alias: 'Electricity: store metrics at midnight'
    initial_state: 'on'
    trigger:
      - platform: time
        at: '00:00:00'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.24hour_power_hp_consumption
          value: "{{ (((states.sensor.teleinfo_hchp.state  | float) - states('input_number.power_hp_meter_value_at_midnight') | float ) | round(3))}}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.24hour_power_hc_consumption
          value: "{{ (((states.sensor.teleinfo_hchc.state  | float) - states('input_number.power_hc_meter_value_at_midnight') | float ) | round(3))}}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.24hour_heat_consumption
          value: "{{ (((  state_attr('sensor.owl_180_energy_usage', 'Total usage') | float) - states('input_number.heat_meter_value_at_midnight') | float ) | round(3))}}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.power_hp_meter_value_at_midnight
          value: "{{ states.sensor.teleinfo_hchp.state }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.power_hc_meter_value_at_midnight
          value: "{{ states.sensor.teleinfo_hchc.state }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.heat_meter_value_at_midnight
          value: "{{  state_attr('sensor.owl_180_energy_usage', 'Total usage') }}"
  
  
  
  
  
  # ################################################################################################
  # ## Tentative to guess which device is switched on
  # ################################################################################################
  
  # - alias: 'Electricity: guess what ?'
  #   trigger:
  #     platform: state
  #     entity_id: sensor.derivative_teleinfo_papp
  #   action:
  #     service: notify.telegram
  #     data_template:
  #       message: >
  #         {% if states("sensor.derivative_teleinfo_papp")|float > 2700 and states("sensor.derivative_teleinfo_papp")|float< 2800 %}
  #         "{{ states.sensor.derivative_teleinfo_papp.state }} | Démarrage: ballon d'eau chaude ?"
  #         {% elif states("sensor.derivative_teleinfo_papp")|float > 2400 and states("sensor.derivative_teleinfo_papp")|float< 2500 %}
  #         "{{ states.sensor.derivative_teleinfo_papp.state }} | Démarrage: lave vaisselle ?"
  #         {% elif states("sensor.derivative_teleinfo_papp")|float > 630 and states("sensor.derivative_teleinfo_papp")|float< 650 %}
  #         "{{ states.sensor.derivative_teleinfo_papp.state }} | Démarrage: chauffage salle de douche ?"
  #         {% elif states("sensor.derivative_teleinfo_papp")|float > 1910 and states("sensor.derivative_teleinfo_papp")|float< 2050 %}
  #         "{{ states.sensor.derivative_teleinfo_papp.state }} | Démarrage: chauffage salon ?"
  #         {% elif states("sensor.derivative_teleinfo_papp")|float > 1240 and states("sensor.derivative_teleinfo_papp")|float< 1340 %}
  #         "{{ states.sensor.derivative_teleinfo_papp.state }} | Démarrage: chauffage chambre ?"
  #         {%endif%}
  
  # #{%else%}
  # #{{ states.sensor.derivative_teleinfo_papp.state |float round(2) }} | Quel appareil ?"
            
