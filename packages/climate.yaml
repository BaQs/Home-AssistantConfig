################################################
## Packages / Host / Climate
################################################

# homeassistant:
#  customize:
#    ################################################
#    ## Node Anchors
#    ################################################
#
#    package.node_anchors:
#      customize: &customize
#        package: 'updates'
#
#    ################################################
#    ## Binary Sensor
#    ################################################
#
#    binary_sensor.hass_update_available:
#      <<: *customize
#      friendly_name: 'Update Available Hass'
#      device_class: problem
#
#    ################################################
#    ## Sensor
#    ################################################
#
#    sensor.hass_installed_version:
#      <<: *customize
#      friendly_name: 'Hass.io Installed Version'
#      icon: mdi:check-decagram
#
################################################
##  Climate
################################################

climate:
  - platform: generic_thermostat
    name: Living Room Thermostat
    # heater: switch.radiateur_1_salon_inverted
    # heater: switch.radiateur_2_salon_inverted
    heater: switch.radiateurs_salon
    target_sensor: sensor.temperature_158d0001db60d9
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp: 19.5
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 3
    initial_operation_mode: "auto"
    away_temp: 17

  - platform: generic_thermostat
    name: Library Thermostat
    heater: switch.radiateur_bibliotheque_inverted
    target_sensor: sensor.temperature_158d0001a4b91d
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp: 19
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 3
    initial_operation_mode: "auto"
    away_temp: 16

  - platform: generic_thermostat
    name: Baby Bedroom Thermostat
    heater: switch.qubino_bedroom_baby
    target_sensor: sensor.temperature_158d0001720782
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp:  19.5
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 3
    initial_operation_mode: "auto"
    away_temp: 17

  - platform: generic_thermostat
    name: Parents Bedroom Thermostat
    heater: switch.qubino_bedroom_parents
    target_sensor: sensor.temperature_158d0001ab75f3
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp: 19.5
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 3
    initial_operation_mode: "auto"
    away_temp: 17


#  - platform: smart_thermostat
#    name: Parents Bedroom Smart Thermostat
#    heater: switch.qubino_bedroom_parents
#    target_sensor: sensor.temperature_158d0001ab75f3
#    min_temp: 15
#    max_temp: 25
#    ac_mode: False
#    target_temp: 19.5
##   cold_tolerance: 0.3
##   hot_tolerance: 0
##   min_cycle_duration:
##     seconds: 5
#    keep_alive:
#      seconds: 15
#    initial_operation_mode: "auto"
#    away_temp: 17
#    kp : 5
#    ki : 3
#    kd : 2
#    pwm : 10
#    autotune : ziegler-nichols
#    difference : 100
#    noiseband : 0.5

################################################
## Switch
################################################


switch:
# Qubino thermostat, used as heater for generic thermostat
  # - platform: template
  #   switches:
  #     qubino_bedroom_parents:
  #       value_template: "{{ is_state('input_select.qubino_bedroom_parents', 'Comfort') }}"
  #       turn_on:
  #         service: input_select.select_option
  #         data:
  #           entity_id: input_select.qubino_bedroom_parents
  #           option: 'Comfort'
  #       turn_off:
  #         service: input_select.select_option
  #         data:
  #           entity_id: input_select.qubino_bedroom_parents
  #           option: 'Stop'
  # We shall not rely on automation, but change directly the "light" component
  - platform: template
    switches:
      qubino_bedroom_parents:
        value_template: "{{ states.light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2.state   }}"
        turn_on:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2
          service: light.turn_on
          data:
            brightness: 230
        turn_off:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2
          service: light.turn_on
          data:
            brightness: 0


# # Qubino thermostat, used as heater for generic thermostat
#   - platform: template
#     switches:
#       qubino_bedroom_baby:
#         value_template: "{{ is_state('input_select.qubino_bedroom_baby', 'Comfort') }}"
#         turn_on:
#           service: input_select.select_option
#           data:
#             entity_id: input_select.qubino_bedroom_baby
#             option: 'Comfort'
#         turn_off:
#           service: input_select.select_option
#           data:
#             entity_id: input_select.qubino_bedroom_baby
#             option: 'Stop'
  - platform: template
    switches:
      qubino_bedroom_baby:
        # TODO
        value_template: "{{ states.light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level.state   }}"
        turn_on:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
          service: light.turn_on
          data:
            brightness: 230
        turn_off:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
          service: light.turn_on
          data:
            brightness: 0


#
## Qubino thermostat, used as heater for generic thermostat
#  - platform: template
#    switches:
#      qubino_bedroom_baby:
#        value_template: "{{ is_state('light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level', 'on') }}"
#        turn_on:
#          service: light.turn_on
#          data:
#            entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
#        turn_off:
#          service: switch.turn_on
#          data:
#            entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level

  - platform: template
    switches:
      radiateur_1_salon_inverted:
        value_template: "{{ is_state('switch.radiateur_1_salon', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_1_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_1_salon
#       icon_template: "{% if is_state('switch.radiateur_1_salon', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"

  - platform: template
    switches:
      radiateur_2_salon_inverted:
        value_template: "{{ is_state('switch.radiateur_2_salon', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_2_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_2_salon
#       icon_template: "{% if is_state('switch.radiateur_2_salon', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"
  - platform: template
    switches:
      radiateurs_salon:
        value_template: "{% if is_state('switch.radiateur_2_salon_inverted', 'off') and is_state('switch.radiateur_1_salon_inverted', 'off') %} false {%else%} true {%endif%} "
        turn_on:
          service: switch.turn_off
          data:
            entity_id: group.radiateurs_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: group.radiateurs_salon
        icon_template: "{% if is_state('group.radiateurs_salon', 'on') %}mdi:radiator{% else %}mdi:radiator-disabled{% endif %}"

  - platform: template
    switches:
      radiateur_cuisine_inverted:
        value_template: "{{ is_state('switch.radiateur_cuisine', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_cuisine
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_cuisine
#       icon_template: "{% if is_state('switch.radiateur_cuisine', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"
  - platform: template
    switches:
      radiateur_bibliotheque_inverted:
        value_template: "{{ is_state('switch.radiateur_bibliotheque', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_bibliotheque
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_bibliotheque
#       icon_template: "{% if is_state('switch.radiateur_bibliotheque', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"

################################################
## Sensor
################################################


sensor:
  # - platform: teleinfo
  #   name: "edf"
  #   device: "/dev/ttyUSB0"
  - platform: teleinfo
    name: "edf"
    device: "/dev/ttyUSB0"
  
  - platform: template
    sensors:
      teleinfo_hchc:
        value_template: '{{ states.sensor.edf.attributes["HCHC"] }}'
        unit_of_measurement: 'Wh'
        icon_template: mdi:flash
        entity_id: sensor.edf

  - platform: template
    sensors:
      teleinfo_hchp:
        value_template: '{{ states.sensor.edf.attributes["HCHP"] }}'
        unit_of_measurement: 'Wh'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_hhphc:
        value_template: '{{ states.sensor.edf.attributes["HHPHC"] }}'
        unit_of_measurement: ''
        icon_template: mdi:information-outline
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_iinst:
        value_template: '{{ states.sensor.edf.attributes["IINST"] }}'
        unit_of_measurement: 'A'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_imax:
        value_template: '{{ states.sensor.edf.attributes["IMAX"] }}'
        unit_of_measurement: 'A'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_papp:
        value_template: '{{ states.sensor.edf.attributes["PAPP"] }}'
        unit_of_measurement: 'vA'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_ptec:
        value_template: '{{ states.sensor.edf.attributes["PTEC"] }}'
        unit_of_measurement: ''
        icon_template: mdi:information-outline
        entity_id: sensor.edf
  
  - platform: template
    sensors:
      teleinfo_isousc:
        value_template: '{{ states.sensor.edf.attributes["ISOUSC"] }}'
        unit_of_measurement: 'A'
        icon_template: mdi:flash
        entity_id: sensor.edf
  
  - platform: template
    sensors:
        elecbill_cta:
            value_template: 20.52
            friendly_name: 'CTA (/an)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_options:
            value_template: 4.99
            friendly_name: 'Options (/m.)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_subscription:
            value_template: 9.78
            friendly_name: 'Subscription (/m.)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_cost_hp:
            value_template: 0.0895
            friendly_name: 'HP Cost (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_cost_hc:
            value_template: 0.0632
            friendly_name: 'HC Cost (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_cspe:
            value_template: 0.0225
            friendly_name: 'Public Electricity Service Contribution (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_tcfe_municipal:
            value_template: 0.00638
            friendly_name: 'Municipal Tax on final electricity consumption (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_tcfe_departmental:
            value_template: 0.00319
            friendly_name: 'Departmental Tax on final electricity consumption (/kWh)'
            unit_of_measurement: '€'

  - platform: template
    sensors:
        elecbill_today_so_far_hc:
            friendly_name: 'Electricity HC cost (Today so far)'
            unit_of_measurement: '€'
            value_template: '

            {{   
            (
            (states.sensor.hc_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) 
            )|round(2)
            }}

            '
            
  - platform: template
    sensors:
        elecbill_today_so_far_hp:
            friendly_name: 'Electricity HP cost (Today so far)'
            unit_of_measurement: '€'
            value_template: '

            {{   
            (
            (states.sensor.hp_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hp.state |float) 
            )|round(2)
            }}

            '

  # number of hours since midnight
  # {{ ( (as_timestamp(now()) - as_timestamp(strptime(states("sensor.date"), "%Y-%m-%d")) )|float /60/60 )|round(2)}}
  #
  # Finally: not used
          
  # we transform W to kWh , bu multiplying the W by nb_hours and / 1000
  # nb_hour = 16 cause HP, 8 cause HC
  #
  - platform: template
    sensors:
        elecbill_today_so_far_hc_heating:
            friendly_name: 'Heating HC cost (Today so far)'
            unit_of_measurement: '€'
            value_template: '

            {{   
            (
            (states.sensor.hc_heating_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) 
            )|round(2)
            }}

            '
  
  # we transform W to kWh , bu multiplying the W by nb_hours and / 1000
  # nb_hour = 16 cause HP, 8 cause HC
  - platform: template
    sensors:
        elecbill_today_so_far_hp_heating:
            friendly_name: 'Heating HP cost (Today so far)'
            unit_of_measurement: '€'
            value_template: '

            {{   
            (
            (states.sensor.hp_heating_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hp.state |float) 
            )|round(2)
            }}

            '

  - platform: template
    sensors:
        elecbill_today_so_far_sub:
            friendly_name: 'Electricity Subscription cost (Today so far)'
            unit_of_measurement: '€'
            value_template: '

            {{   

            (

            (states.sensor.elecbill_subscription.state |float / 30) + 
            (states.sensor.elecbill_cta.state |float / 365)  

            + (states.sensor.elecbill_options.state |float /30)

            )|round(2)

            }}

            '
  - platform: template
    sensors:
        elecbill_today_so_far_taxes:
            friendly_name: 'Electricity Taxes cost (Today so far)'
            unit_of_measurement: '€'
            value_template: '

            {{   

            (

            (
            (states.sensor.elecbill_subscription.state |float / 30) + 
            (states.sensor.elecbill_cta.state |float / 365)  
            ) * 0.055

            +

            (
            (states.sensor.hc_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_today_so_far.state |float /1000 ) *
            (states.sensor.elecbill_cost_hp.state|float)

            + (states.sensor.elecbill_options.state |float /30)

            ) * 0.20


            + 
            (
            ( 
            (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
            )
            +
            ( 
            (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
            )

            ) * 1.20

            )|round(2)

            }}

            '
  
  - platform: template
    sensors:
        elecbill_today_so_far_ttc:
            friendly_name: 'Electricity TTC cost (Today so far)'
            unit_of_measurement: '€'
            value_template: '

            {{   

            (

            (
            (states.sensor.elecbill_subscription.state |float / 30) + 
            (states.sensor.elecbill_cta.state |float / 365)  
            ) * 1.055

            +

            (
            (states.sensor.hc_energy_consumed_today_so_far.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_today_so_far.state |float /1000 ) *
            (states.sensor.elecbill_cost_hp.state|float)

            + (states.sensor.elecbill_options.state |float /30)

            + 
            ( 
            (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
            )
            +
            ( 
            (states.sensor.hc_energy_consumed_today_so_far.state|float/1000 + states.sensor.hp_energy_consumed_today_so_far.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
            )

            ) * 1.20

            )|round(2)

            }}

            '
 
  - platform: template
    sensors:
        elecbill_today_ttc:
            value_template: '

            {{   

            (

            (
            (states.sensor.elecbill_subscription.state |float / 30) + 
            (states.sensor.elecbill_cta.state |float / 365)  
            ) * 1.055

            +

            (
            (states.sensor.hc_energy_consumed_last_day.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_last_day.state |float /1000 ) *
            (states.sensor.elecbill_cost_hp.state|float)

            + (states.sensor.elecbill_options.state |float /30)

            + 
            ( 
            (states.sensor.hc_energy_consumed_last_day.state|float/1000 + states.sensor.hp_energy_consumed_last_day.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
            )
            +
            ( 
            (states.sensor.hc_energy_consumed_last_day.state|float/1000 + states.sensor.hp_energy_consumed_last_day.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
            )

            ) * 1.20

            )|round(2)

            }}

            '
            friendly_name: 'Energy cost today (TTC)'
            unit_of_measurement: '€'


  - platform: template
    sensors:
        elecbill_last_week_ttc:
            value_template: '
            {{   

            (

            (
            (states.sensor.elecbill_subscription.state |float / 7) + 
            (states.sensor.elecbill_cta.state |float / 52)  
            ) * 1.055

            +

            (
            (states.sensor.hc_energy_consumed_last_week.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_last_week.state |float /1000 ) *
            (states.sensor.elecbill_cost_hp.state|float)

            + (states.sensor.elecbill_options.state |float /7)

            + 
            ( 
            (states.sensor.hc_energy_consumed_last_week.state|float/1000 + states.sensor.hp_energy_consumed_last_week.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
            )
            +
            ( 
            (states.sensor.hc_energy_consumed_last_week.state|float/1000 + states.sensor.hp_energy_consumed_last_week.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
            )

            ) * 1.20

            )|round(2)

            }} 

            '
            friendly_name: 'Energy cost last week (TTC)'
            unit_of_measurement: '€'



  - platform: template
    sensors:
        elecbill_last_month_ttc:
            value_template: '
            {{   
            (

            (
            (states.sensor.elecbill_subscription.state |float) + 
            (states.sensor.elecbill_cta.state |float / 12)  
            ) * 1.055

            +

            (
            (states.sensor.hc_energy_consumed_last_month.state |float /1000 ) *(states.sensor.elecbill_cost_hc.state |float) + (states.sensor.hp_energy_consumed_last_month.state |float /1000 ) *
            (states.sensor.elecbill_cost_hp.state|float)

            + (states.sensor.elecbill_options.state |float )

            + 
            ( 
            (states.sensor.hc_energy_consumed_last_month.state|float/1000 + states.sensor.hp_energy_consumed_last_month.state|float/1000) * states.sensor.elecbill_tcfe_municipal.state|float
            )
            +
            ( 
            (states.sensor.hc_energy_consumed_last_month.state|float/1000 + states.sensor.hp_energy_consumed_last_month.state|float/1000) * states.sensor.elecbill_tcfe_departmental.state|float
            )

            ) * 1.20

            )|round(2)

            }} 

            '
            friendly_name: 'Energy cost last month (TTC)'
            unit_of_measurement: '€'






  - platform: influxdb
    host: 192.168.0.28

    queries:
#
#      - name: HC Energy Consumed (last hour)
#        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1h'
#        measurement: '"Wh"'
#        group_function: spread
#        value_template: '{{ value | round(2) }}'
#        unit_of_measurement: Wh
#
#      - name: HP Energy Consumed (last hour)
#        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1h'
#        measurement: '"Wh"'
#        group_function: spread
#        value_template: '{{ value | round(2) }}'
#        unit_of_measurement: Wh
#
      - name: HC Energy Consumed (today so far)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d") }}'' TZ(''Europe/Paris'')  '
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (today so far)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d") }}''  TZ(''Europe/Paris'') '
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh


        # number of seconds since midnight
        # {{ ( (as_timestamp(now()) - as_timestamp(strptime(states("sensor.date"), "%Y-%m-%d")) )|float /60/60 )|round(2)}}
        
      - name: HC Heating Consumed (today so far)
        where: '"entity_id" = ''owl_180_energy_usage'' AND "Total usage" > 0 AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d ") }} 00:00:00''  AND time < ''{{ strptime(states("sensor.date"), "%Y-%m-%d ") }} 08:00:00'' TZ(''Europe/Paris'') '
        measurement: '"W"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh
        field:  '"Total usage"'

        # NB/ the space after %d is important! otherwise it generates automatically 00:00:00

      - name: HP Heating Consumed (today so far)
        where: '"entity_id" = ''owl_180_energy_usage'' AND "Total usage" > 0 AND time >= ''{{ strptime(states("sensor.date"), "%Y-%m-%d ") }} 08:00:00''  TZ(''Europe/Paris'') '
        measurement: '"W"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh
        field:  '"Total usage"'


      - name: HC Energy Consumed (last day)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1d'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (last day)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1d'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HC Energy Consumed (last week)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1w'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (last week)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1w'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HC Energy Consumed (last month)
        where: '"entity_id" = ''teleinfo_hchc'' AND time >= now() - 1m'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: HP Energy Consumed (last month)
        where: '"entity_id" = ''teleinfo_hchp'' AND time >= now() - 1m'
        measurement: '"Wh"'
        group_function: spread
        value_template: '{{ value | round(2) }}'
        unit_of_measurement: Wh

      - name: Spread Teleinfo PAPP
        where: '"entity_id" = ''teleinfo_papp'' AND time >= now() - 180s TZ(''Europe/Paris'') '
        group_function: spread
        measurement: '"vA"'
        unit_of_measurement: vA
      # value_template: '{{ value | round(2) }}'


      - name: Derivative Teleinfo PAPP
        where: '"entity_id" = ''teleinfo_papp'' AND time >= now() - 120s TZ(''Europe/Paris'') '
        group_function: derivative
        field:  '"value",2m'
        measurement: '"vA"'
        unit_of_measurement: vA
      # value_template: '{{ value | round(2) }}'

 


################################################
## Binary Sensor
################################################

binary_sensor:

group:
  # host_updates:
  #   name: 'Updates'
  #   entities:
  #     - updater.updater
  #     - sensor.hass_installed_version





input_select:

  qubino_bedroom_baby:
    name: Qubino Baby Bedroom
    options:
     - Stop
     - Anti-Freeze
     - Eco
     - Comfort -2
     - Comfort -1
     - Comfort
    initial: Comfort

  qubino_bedroom_parents:
    name: Qubino Parents Bedroom
    options:
     - Stop
     - Anti-Freeze
     - Eco
     - Comfort -2
     - Comfort -1
     - Comfort
    initial: Comfort
    

################################################
## Automation
################################################
# https://github.com/home-assistant/home-assistant/issues/4525
#Ok, The output is controlled via the light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_6_0
# https://www.planete-domotique.com/notices/Q/QUBINO/Qubino_Flush%20Pilot%20Wire_PLUS_user%20manual_V1.1_fra.pdf
# https://www.12h26.com/archives/gerer-qubino-flush-pilot-wire-home-asistant
#So:
#0 is Stop
#15 is Anti-Freeze
#25 is Eco
#35 is Comfort -2
#45 is Comfort -1
#100 is Comfort
#This is not a bug, but how this device is made.
#

automation:
  - alias: 'Qubino Radiateur - Parents'
    # initial_state: True
    trigger:
      platform: state
      entity_id: input_select.qubino_bedroom_parents
    action:
      entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2
      service: light.turn_on
      data_template:
        brightness: >
          {% if is_state("input_select.qubino_bedroom_parents", "Comfort") %}
            230
          {% elif is_state("input_select.qubino_bedroom_parents", "Comfort -1") %}
            105
          {% elif is_state("input_select.qubino_bedroom_parents", "Comfort -2") %}
            79 
          {% elif is_state("input_select.qubino_bedroom_parents", "Eco") %}
            54 
          {% elif is_state("input_select.qubino_bedroom_parents", "Anti-Freeze") %}
            28
          {% elif is_state("input_select.qubino_bedroom_parents", "Stop") %}
             0
          {% else %}
             0
          {% endif %}


  - alias: 'Qubino Radiateur - Baby'
    # initial_state: True
    trigger:
      platform: state
      entity_id: input_select.qubino_bedroom_baby
    action:
      entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
      service: light.turn_on
      data_template:
        brightness: >
          {% if is_state("input_select.qubino_bedroom_baby", "Comfort") %}
            230
          {% elif is_state("input_select.qubino_bedroom_baby", "Comfort -1") %}
            105
          {% elif is_state("input_select.qubino_bedroom_baby", "Comfort -2") %}
            79
          {% elif is_state("input_select.qubino_bedroom_baby", "Eco") %}
            54
          {% elif is_state("input_select.qubino_bedroom_baby", "Anti-Freeze") %}
            28 
          {% elif is_state("input_select.qubino_bedroom_baby", "Stop") %}
             0
          {% else %}
             0
          {% endif %}

# when back home from away: all thermostats are NOT in away mode
  - alias: "Climate: Back Home from Away"
    hide_entity: false
    trigger:
      - platform: state
        entity_id: sensor.current_state
        from: 'away'
        to: 'home'
    action:
      # Send a notification
      - service: climate.set_away_mode
        data:
          entity_id: group.climate
          away_mode: false

# when quitting home, all is away
  - alias: "Climate: Away from Home"
    hide_entity: false
    trigger:
      - platform: state
        entity_id: sensor.current_state
        from: 'home'
        to: 'away'
        for:
          minutes: 10
    # Set away mode
    action:
      - service: climate.set_away_mode
        data:
          entity_id: group.climate
          away_mode: true

# when going to bed, away mode for living room + library thermostat
  - id: climate_to_bed
    alias: 'Climate: To bed'
    trigger:
    - entity_id: binary_sensor.in_bed
      platform: state
      to: 'on'
    condition:
  #  - condition: numeric_state
  #    entity_id: sensor.illumination_158d0001ab34e1
  #    below: '200'
    action:
      - service: climate.set_away_mode
        data:
          entity_id:  climate.parents_bedroom_thermostat
          away_mode: false
      - service: climate.set_away_mode
        data:
          entity_id: climate.living_room_thermostat 
          away_mode: true
      - service: climate.set_away_mode
        data:
          entity_id: climate.library_thermostat 
          away_mode: true

# good morning, heating in living room
  - id: climate_from_bed
    alias: 'Climate: From bed'
    trigger:
    - entity_id: binary_sensor.in_bed
      platform: state
      to: 'off'
    condition:
    - condition: state
      entity_id: binary_sensor.somebody_home
      state: 'on'
    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.living_room_thermostat 
          away_mode: false
      - service: climate.set_away_mode
        data:
          entity_id: climate.library_thermostat 
          away_mode: false


# good morning + 60min, bedrooms in away mode
  - id: climate_from_bed
    alias: 'Climate: From bed'
    trigger:
    - entity_id: binary_sensor.in_bed
      platform: state
      to: 'off'
      for:
        minutes: 60
    condition:
    - condition: state
      entity_id: binary_sensor.somebody_home
      state: 'on'
    action:
      - service: climate.set_away_mode
        data:
          entity_id:  climate.parents_bedroom_thermostat
          away_mode: true
      - service: climate.set_away_mode
        data:
          entity_id: climate.baby_bedroom_thermostat
          away_mode: true


  - id: baby_bed
    alias: 'Baby: Bed'
    trigger:
      platform: time
      at: '19:00:00'
  # condition:
    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.baby_bedroom_thermostat
          away_mode: false





