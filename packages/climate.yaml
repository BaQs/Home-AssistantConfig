################################################
## Packages / Host / Climate
################################################

# homeassistant:
#  customize:
#    ################################################
#    ## Node Anchors
#    ################################################
#
#    package.node_anchors:
#      customize: &customize
#        package: 'updates'
#
#    ################################################
#    ## Binary Sensor
#    ################################################
#
#    binary_sensor.hass_update_available:
#      <<: *customize
#      friendly_name: 'Update Available Hass'
#      device_class: problem
#
#    ################################################
#    ## Sensor
#    ################################################
#
#    sensor.hass_installed_version:
#      <<: *customize
#      friendly_name: 'Hass.io Installed Version'
#      icon: mdi:check-decagram
#
################################################
##  Climate
################################################

climate:
  - platform: generic_thermostat
    name: Living Room Thermostat
    # heater: switch.radiateur_1_salon_inverted
    # heater: switch.radiateur_2_salon_inverted
    heater: switch.radiateurs_salon
    target_sensor: sensor.temperature_158d0001db60d9
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp: 21
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 3
    initial_operation_mode: "auto"
    away_temp: 17
    
  - platform: generic_thermostat
    name: Shower Thermostat
    heater: switch.qubino_zmnhadx_flush_1_relay_switch
    target_sensor: sensor.temperature_158d0001e421d9
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp: 19
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 1
    initial_operation_mode: "auto"
    away_temp: 15

  - platform: generic_thermostat
    name: Library Thermostat
    heater: switch.radiateur_bibliotheque_inverted
    target_sensor: sensor.temperature_158d0001a4b91d
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp: 18
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 3
    initial_operation_mode: "auto"
    away_temp: 16

  - platform: generic_thermostat
    name: Baby Bedroom Thermostat
    heater: switch.qubino_bedroom_baby
    target_sensor: sensor.temperature_158d0001720782
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp:  20.5
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    # keep_alive:
    #   minutes: 3
    initial_operation_mode: "auto"
    away_temp: 17

  - platform: generic_thermostat
    name: Parents Bedroom Thermostat
    heater: switch.qubino_bedroom_parents
    target_sensor: sensor.temperature_158d0001ab75f3
    min_temp: 15
    max_temp: 25
    ac_mode: False
    target_temp: 20
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      seconds: 30
    # keep_alive:
    #   minutes: 3
    initial_operation_mode: "auto"
    away_temp: 17


#  - platform: smart_thermostat
#    name: Parents Bedroom Smart Thermostat
#    heater: switch.qubino_bedroom_parents
#    target_sensor: sensor.temperature_158d0001ab75f3
#    min_temp: 15
#    max_temp: 25
#    ac_mode: False
#    target_temp: 19.5
##   cold_tolerance: 0.3
##   hot_tolerance: 0
##   min_cycle_duration:
##     seconds: 5
#    keep_alive:
#      seconds: 15
#    initial_operation_mode: "auto"
#    away_temp: 17
#    kp : 5
#    ki : 3
#    kd : 2
#    pwm : 10
#    autotune : ziegler-nichols
#    difference : 100
#    noiseband : 0.5

################################################
## Switch
################################################


switch:
  # Qubino thermostat, used as heater for generic thermostat
  # - platform: template
  #   switches:
  #     qubino_bedroom_parents:
  #       value_template: "{{ is_state('input_select.qubino_bedroom_parents', 'Comfort') }}"
  #       turn_on:
  #         service: input_select.select_option
  #         data:
  #           entity_id: input_select.qubino_bedroom_parents
  #           option: 'Comfort'
  #       turn_off:
  #         service: input_select.select_option
  #         data:
  #           entity_id: input_select.qubino_bedroom_parents
  #           option: 'Stop'
  # We shall not rely on automation, but change directly the "light" component
 
  - platform: template
    switches:
      qubino_bedroom_parents:
        value_template: "{{ states.light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2.state   }}"
        turn_on:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2
          service: light.turn_on
          data:
            brightness: 230
        turn_off:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2
          service: light.turn_on
          data:
            brightness: 0


# # Qubino thermostat, used as heater for generic thermostat
#   - platform: template
#     switches:
#       qubino_bedroom_baby:
#         value_template: "{{ is_state('input_select.qubino_bedroom_baby', 'Comfort') }}"
#         turn_on:
#           service: input_select.select_option
#           data:
#             entity_id: input_select.qubino_bedroom_baby
#             option: 'Comfort'
#         turn_off:
#           service: input_select.select_option
#           data:
#             entity_id: input_select.qubino_bedroom_baby
#             option: 'Stop'
  - platform: template
    switches:
      qubino_bedroom_baby:
        # TODO
        value_template: "{{ states.light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level.state   }}"
        turn_on:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
          service: light.turn_on
          data:
            brightness: 230
        turn_off:
          entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
          service: light.turn_on
          data:
            brightness: 0


#
## Qubino thermostat, used as heater for generic thermostat
#  - platform: template
#    switches:
#      qubino_bedroom_baby:
#        value_template: "{{ is_state('light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level', 'on') }}"
#        turn_on:
#          service: light.turn_on
#          data:
#            entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
#        turn_off:
#          service: switch.turn_on
#          data:
#            entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level

  - platform: template
    switches:
      radiateur_1_salon_inverted:
        value_template: "{{ is_state('switch.radiateur_1_salon', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_1_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_1_salon
#       icon_template: "{% if is_state('switch.radiateur_1_salon', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"

  - platform: template
    switches:
      radiateur_2_salon_inverted:
        value_template: "{{ is_state('switch.radiateur_2_salon', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_2_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_2_salon
#       icon_template: "{% if is_state('switch.radiateur_2_salon', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"
  - platform: template
    switches:
      radiateurs_salon:
        value_template: "{% if is_state('switch.radiateur_2_salon_inverted', 'off') and is_state('switch.radiateur_1_salon_inverted', 'off') %} false {%else%} true {%endif%} "
        turn_on:
          service: switch.turn_off
          data:
            entity_id: group.radiateurs_salon
        turn_off:
          service: switch.turn_on
          data:
            entity_id: group.radiateurs_salon
        icon_template: "{% if is_state('group.radiateurs_salon', 'on') %}mdi:radiator{% else %}mdi:radiator-disabled{% endif %}"

  - platform: template
    switches:
      radiateur_cuisine_inverted:
        value_template: "{{ is_state('switch.radiateur_cuisine', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_cuisine
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_cuisine
#       icon_template: "{% if is_state('switch.radiateur_cuisine', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"
  - platform: template
    switches:
      radiateur_bibliotheque_inverted:
        value_template: "{{ is_state('switch.radiateur_bibliotheque', 'off') }}"
        turn_on:
          service: switch.turn_off
          data:
            entity_id: switch.radiateur_bibliotheque
        turn_off:
          service: switch.turn_on
          data:
            entity_id: switch.radiateur_bibliotheque
#       icon_template: "{% if is_state('switch.radiateur_bibliotheque', 'on') %}mdi:garage{% else %}mdi:garage-open{% endif %}"

################################################
## Sensor
################################################

# # fake sensors to show off graphs in lovelace using mini-graph custom card (that only supports sensors)
sensor:
  - platform: template
    sensors:
      climate_parents_bedroom_thermostat_operation_mode:
        value_template: "{% if  is_state_attr('climate.parents_bedroom_thermostat', 'operation_mode', 'heat') %} 1 {% else %} 0 {% endif %}"
        entity_id: climate.parents_bedroom_thermostat
      climate_living_room_thermostat_operation_mode:
        value_template: "{% if  is_state_attr('climate.living_room_thermostat', 'operation_mode', 'heat') %} 1 {% else %}0{% endif %}"
        entity_id: climate.living_room_thermostat
      climate_baby_bedroom_thermostat_operation_mode:
        value_template: "{% if  is_state_attr('climate.baby_bedroom_thermostat', 'operation_mode', 'heat') %} 1 {% else %}0{% endif %}"
        entity_id: climate.baby_bedroom_thermostat
      climate_library_thermostat_operation_mode:
        value_template: "{% if  is_state_attr('climate.library_thermostat', 'operation_mode', 'heat') %} 1 {% else %}0{% endif %}"
        entity_id: climate.library_thermostat

      climate_parents_bedroom_thermostat_operation_temperature:
        # value_template: "{% if  is_state_attr('climate.parents_bedroom_thermostat', 'operation_mode', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %} 0 {% endif %}"
        value_template: "{% if  is_state('climate.parents_bedroom_thermostat', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %} 0 {% endif %}"

        entity_id: climate.parents_bedroom_thermostat
      climate_living_room_thermostat_operation_temperature:
        # value_template: "{% if  is_state_attr('climate.living_room_thermostat', 'operation_mode', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %}0{% endif %}"
        value_template: "{% if  is_state('climate.living_room_thermostat', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %} 0 {% endif %}"
        entity_id: climate.living_room_thermostat
      climate_baby_bedroom_thermostat_operation_temperature:
        # value_template: "{% if  is_state_attr('climate.baby_bedroom_thermostat', 'operation_mode', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %}0{% endif %}"
        value_template: "{% if  is_state('climate.baby_bedroom_thermostat', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %} 0 {% endif %}"
        entity_id: climate.baby_bedroom_thermostat
      climate_library_thermostat_operation_temperature:
        # value_template: "{% if  is_state_attr('climate.library_thermostat', 'operation_mode', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %}0{% endif %}"
        value_template: "{% if  is_state('climate.library_thermostat', 'heat') %} {{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} {% else %} 0 {% endif %}"
        entity_id: climate.library_thermostat

      climate_parents_bedroom_thermostat_temperature:
        value_template: "{{ state_attr('climate.parents_bedroom_thermostat', 'temperature') }} "
        entity_id: climate.parents_bedroom_thermostat
      climate_living_room_thermostat_temperature:
        value_template: "{{ state_attr('climate.living_room_thermostat', 'temperature') }} "
        entity_id: climate.living_room_thermostat
      climate_baby_bedroom_thermostat_temperature:
        value_template: "{{ state_attr('climate.baby_bedroom_thermostat', 'temperature') }} "
        entity_id: climate.baby_bedroom_thermostat
      climate_library_thermostat_temperature:
        value_template: "{{ state_attr('climate.library_thermostat', 'temperature') }} "
        entity_id: climate.library_thermostat

      climate_parents_bedroom_thermostat_current_temperature:
        value_template: "{{ state_attr('climate.parents_bedroom_thermostat', 'current_temperature') }} "
        entity_id: climate.parents_bedroom_thermostat
      climate_living_room_thermostat_current_temperature:
        value_template: "{{ state_attr('climate.living_room_thermostat', 'current_temperature') }} "
        entity_id: climate.living_room_thermostat
      climate_baby_bedroom_thermostat_current_temperature:
        value_template: "{{ state_attr('climate.baby_bedroom_thermostat', 'current_temperature') }} "
        entity_id: climate.baby_bedroom_thermostat
      climate_library_thermostat_current_temperature:
        value_template: "{{ state_attr('climate.library_thermostat', 'current_temperature') }} "
        entity_id: climate.library_thermostat

################################################
## Binary Sensor
################################################

binary_sensor:

group:
  # host_updates:
  #   name: 'Updates'
  #   entities:
  #     - updater.updater
  #     - sensor.hass_installed_version





input_select:

  qubino_bedroom_baby:
    name: Qubino Baby Bedroom
    options:
     - Stop
     - Anti-Freeze
     - Eco
     - Comfort -2
     - Comfort -1
     - Comfort
    initial: Comfort

  qubino_bedroom_parents:
    name: Qubino Parents Bedroom
    options:
     - Stop
     - Anti-Freeze
     - Eco
     - Comfort -2
     - Comfort -1
     - Comfort
    initial: Comfort
    

################################################
## Automation
################################################
# https://github.com/home-assistant/home-assistant/issues/4525
#Ok, The output is controlled via the light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_6_0
# https://www.planete-domotique.com/notices/Q/QUBINO/Qubino_Flush%20Pilot%20Wire_PLUS_user%20manual_V1.1_fra.pdf
# https://www.12h26.com/archives/gerer-qubino-flush-pilot-wire-home-asistant
#So:
#0 is Stop
#15 is Anti-Freeze
#25 is Eco
#35 is Comfort -2
#45 is Comfort -1
#100 is Comfort
#This is not a bug, but how this device is made.
#

automation:
  - alias: 'Qubino Radiateur - Parents'
    # initial_state: True
    trigger:
      platform: state
      entity_id: input_select.qubino_bedroom_parents
    action:
      entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level_2
      service: light.turn_on
      data_template:
        brightness: >
          {% if is_state("input_select.qubino_bedroom_parents", "Comfort") %}
            230
          {% elif is_state("input_select.qubino_bedroom_parents", "Comfort -1") %}
            105
          {% elif is_state("input_select.qubino_bedroom_parents", "Comfort -2") %}
            79 
          {% elif is_state("input_select.qubino_bedroom_parents", "Eco") %}
            54 
          {% elif is_state("input_select.qubino_bedroom_parents", "Anti-Freeze") %}
            28
          {% elif is_state("input_select.qubino_bedroom_parents", "Stop") %}
             0
          {% else %}
             0
          {% endif %}


  - alias: 'Qubino Radiateur - Baby'
    # initial_state: True
    trigger:
      platform: state
      entity_id: input_select.qubino_bedroom_baby
    action:
      entity_id: light.qubino_zmnhjd1_flush_dimmer_pilot_wire_level
      service: light.turn_on
      data_template:
        brightness: >
          {% if is_state("input_select.qubino_bedroom_baby", "Comfort") %}
            230
          {% elif is_state("input_select.qubino_bedroom_baby", "Comfort -1") %}
            105
          {% elif is_state("input_select.qubino_bedroom_baby", "Comfort -2") %}
            79
          {% elif is_state("input_select.qubino_bedroom_baby", "Eco") %}
            54
          {% elif is_state("input_select.qubino_bedroom_baby", "Anti-Freeze") %}
            28 
          {% elif is_state("input_select.qubino_bedroom_baby", "Stop") %}
             0
          {% else %}
             0
          {% endif %}

# when back home from away: all thermostats are NOT in away mode
  - alias: "Climate: Back Home from Away"
    hide_entity: false
    trigger:
      - platform: state
        entity_id: sensor.current_state
        from: 'away'
        to: 'home'
    action:
      # Send a notification
      - service: climate.set_away_mode
        data:
          entity_id: group.climate
          away_mode: false

# when quitting home, all is away
  - alias: "Climate: Away from Home"
    hide_entity: false
    trigger:
      - platform: state
        entity_id: sensor.current_state
        from: 'home'
        to: 'away'
        for:
          minutes: 10
    # Set away mode
    action:
      - service: climate.set_away_mode
        data:
          entity_id: group.climate
          away_mode: true

# # when going to bed, away mode for living room + library thermostat
#   - id: climate_to_bed
#     alias: 'Climate: To bed'
#     trigger:
#     - entity_id: binary_sensor.in_bed
#       platform: state
#       to: 'on'
#     condition:
#     - condition: state
#       entity_id: sensor.current_state
#       state: 'home'
#     action:
#       # - service: climate.set_away_mode
#       #   data:
#       #     entity_id:  climate.parents_bedroom_thermostat
#       #     away_mode: false
#       - service: climate.set_away_mode
#         data:
#           entity_id: climate.living_room_thermostat 
#           away_mode: true
#       - service: climate.set_away_mode
#         data:
#           entity_id: climate.library_thermostat 
#           away_mode: true

# # good morning, heating in living room
#   - id: climate_from_bed
#     alias: 'Climate: From bed'
#     trigger:
#     - entity_id: binary_sensor.in_bed
#       platform: state
#       to: 'off'
#     condition:
#     - condition: state
#       entity_id: sensor.current_state
#       state: 'home'
#     action:
#       - service: climate.set_away_mode
#         data:
#           entity_id: climate.living_room_thermostat 
#           away_mode: false
#       - service: climate.set_away_mode
#         data:
#           entity_id: climate.library_thermostat 
#           away_mode: false


  # good morning + 60min, bedrooms in away mode
  # - id: climate_from_bed
  #   alias: 'Climate: From bed'
  #   trigger:
  #   - entity_id: binary_sensor.in_bed
  #     platform: state
  #     to: 'off'
  #     for:
  #       minutes: 60
  #   condition:
  #   - condition: state
  #     entity_id: sensor.current_state
  #     state: 'home'
  #   action:
  #     - service: climate.set_away_mode
  #       data:
  #         entity_id:  climate.parents_bedroom_thermostat
  #         away_mode: true
  #     - service: climate.set_away_mode
  #       data:
  #         entity_id: climate.baby_bedroom_thermostat
  #         away_mode: true

  # Replaced by schedy
  # 
  # - id: baby_bed
  #   alias: 'Baby: Bed'
  #   trigger:
  #     platform: time
  #     at: '19:00:00'
  # # condition:
  #   action:
  #     - service: climate.set_away_mode
  #       data:
  #         entity_id: climate.baby_bedroom_thermostat
  #         away_mode: false




  - id: shower_heating_off_after_30min
    alias: 'Heating: shower off after 60min'
    trigger:
      platform: state
      entity_id: switch.qubino_zmnhadx_flush_1_relay_switch
      to: 'on'
      for:
        minutes: 60
    action:
      - service: switch.turn_off
        entity_id: switch.qubino_zmnhadx_flush_1_relay_switch
      - service: notify.ios_ipierre
        data:
          message: "Shower heater has been on for 30min, shutting it off automatically"
          title: "Heating"


  
  #  Replaced by schedy
  # 
  # - id: shower_heating_on_morning_weekday
  #   alias: 'Heating: shower ON on weekday mornings'
  #   trigger:
  #   - platform: time
  #     at: "07:00:00"
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: state
  #         entity_id: sensor.current_state
  #         state: 'home'
  #       - condition: time
  #         after: '06:00:00'
  #         before: '10:00:00'
  #         weekday:
  #           - mon
  #           - tue
  #           - wed
  #           - thu
  #           - fri
  #   action:
  #     - service: switch.turn_on
  #       entity_id: switch.qubino_zmnhadx_flush_1_relay_switch
  #     - service: notify.telegram
  #       data:
  #         message: "Good morning, Shower heater on"


  # - id: shower_heating_on_morning_weekends
  #   alias: 'Heating: shower ON on weekends mornings'
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.in_bed
  #     to: 'off'
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: state
  #         entity_id: sensor.current_state
  #         state: 'home'
  #       - condition: time
  #         after: '06:00:00'
  #         before: '11:00:00'
  #         weekday:
  #           - sat
  #           - sun
  #   action:
  #     - service: switch.turn_on
  #       entity_id: switch.qubino_zmnhadx_flush_1_relay_switch
  #     - service: notify.telegram
  #       data:
  #         message: "Good morning, Shower heater on"


# heating according to proximity
# TODO: add condition if current_state = away

  - alias: 'Climate: Turn heat up as I get closer to home'
    trigger:
      platform: numeric_state
      entity_id: proximity.home
      # Trigger when becoming 1-5 miles away
      below: 5
      above: 1
    condition:
      condition: and
      conditions:

          # Heading home
        - condition: template
          value_template: '{{ states.proximity.home.attributes.dir_of_travel == "towards" }}'

          # Not already set
        # - condition: template
        #   # TODO figure out how to use a variable instead of hardcoding 62
        #   # I'm using secrets (like below) where heat_target_mid is 62, but I
        #   # don't see how to use it here
        #   value_template: '{{ states.thermostat.stelpro_stzw402_electronic_thermostat_heating_1_11.attributes.temperature != 62 }}'

          # Nobody home
        - condition: state
          entity_id: sensor.current_state
          state: 'away'
    action:
      # - service: notify.ios_ipierre
      #   data:
      #     message: 'I should turn the heating up now'
      #     title: Climate

      - service: notify.telegram
        data:
          message: "I'm turning on the heating in the leaving room (on the way home)"
      # - service: climate.set_away_mode
      #   data:
      #     entity_id: climate.living_room_thermostat 
      #     away_mode: false

      - service: climate.set_temperature
        data:
          entity_id: climate.living_room_thermostat
          temperature: 21
          operation_mode: Heat

  - alias: 'Climate: Turn heat down as I get farther to home'
    trigger:
      platform: numeric_state
      entity_id: proximity.home
      # Trigger when becoming 1-5 miles away
      above: 5
    condition:
      condition: and
      conditions:

          # Heading home
        - condition: template
          value_template: '{{ states.proximity.home.attributes.dir_of_travel == "away_from" }}'
          # Nobody home
        - condition: state
          entity_id: sensor.current_state
          state: 'away'
    action:
      # - service: notify.ios_ipierre
      #   data:
      #     message: 'I should turn the heating up now'
      #     title: Climate

      - service: notify.telegram
        data:
          message: "I'm turning off the heating in the leaving room (going away from home)"
      - service: climate.set_away_mode
        data:
          entity_id: climate.living_room_thermostat 
          away_mode: true



